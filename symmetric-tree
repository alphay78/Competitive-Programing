# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSymmetric(self, root: Optional[TreeNode]) -> bool:
        def dfs(leftChild , rightChild):
            if not leftChild and not rightChild:
                return True
            if not leftChild or not rightChild :
                return False
            if leftChild.val != rightChild.val:
                return False

            left = dfs(leftChild.left , rightChild.right)
            right = dfs(leftChild.right , rightChild.left)

            return (left and right)
        return dfs(root.left , root.right)
        





    

